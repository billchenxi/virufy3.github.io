{"version":3,"sources":["../../src/logic/storeFactory.ts","../../src/constants.ts","../../src/logic/getBrowserStoreData.ts","../../src/StateMachineContext.tsx","../../src/stateMachine.tsx","../../src/logic/devTool.ts","hooks/useHeaderContext.ts","helper/scrollHelper.ts","components/Texts/Texts.ts","components/Button/style.ts","components/Button/Button.tsx","components/WizardButtons/style.ts","components/WizardButtons/WizardButtons.tsx","utils/wizard.ts","containers/SubmitSteps/RecordingsSteps/RecordManualUpload/style.ts","containers/SubmitSteps/RecordingsSteps/RecordManualUpload/RecordManualUpload.tsx","containers/SubmitSteps/RecordingsSteps/RecordManualUpload/index.ts"],"names":["name","this","storageType","sessionStorage","window","updateStore","defaultValues","state","storeName","JSON","parse","getItem","updateMiddleWares","middleWares","StateMachineContext","React","StateMachineProvider","children","storeFactory","Provider","value","setState","createStore","defaultState","options","useStateMachine","actions","Object","entries","reduce","previous","assign","callback","payload","setItem","stringify","length","currentValue","currentFunction","useHeaderContext","useContext","HeaderContext","title","setTitle","setDoGoBack","doGoBack","scrollToTop","scrollTo","top","behavior","BaseText","css","BlackText","styled","div","dark","colors","darkBlack","black","props","fontSize","BaseTitle","StyledButton","button","color","disabled","midGray","white","Button","memo","type","WizardButtonsContainer","theme","layout","generalPaddingAmount","breakpoints","tablet","WizardButtons","invert","leftLabel","leftDisabled","leftHandler","rightLabel","rightDisabled","rightHandler","onClick","updateAction","storeKey","resetStore","welcome","language","MainContainer","Title","Text","darkGray_70","TextAddFile","attrs","TextFileConstraints","darkGray","TextErrorContainer","red","UploadContainer","UploadInput","input","UploadButton","label","green","schema","Yup","uploadedFile","required","test","size","a","file","audio","Audio","URL","createObjectURL","load","Promise","resolver","addEventListener","duration","defined","RecordManualUpload","previousStep","nextStep","metadata","Portal","usePortal","bindTo","document","getElementById","history","useHistory","useForm","mode","currentLogic","yupResolver","handleSubmit","control","formState","t","useTranslation","isValid","useState","activeStep","setActiveStep","errorMsg","setErrorMsg","handleNext","useCallback","values","recordingFile","push","from","handleDoBack","goBack","handleUpload","e","validate","then","catch","err","errors","useEffect","render","htmlFor","id","accept","onChange","currentTarget","files"],"mappings":"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","file":"static/js/11.d70cd9db.chunk.js","sourcesContent":["import { STORE_DEFAULT_NAME } from '../constants';\nimport getStoreData from './getBrowserStoreData';\nimport { MiddleWare, GlobalState } from '../types';\n\nclass StoreFactory {\n  public storageType: Storage;\n  public state: GlobalState = {};\n  public middleWares: MiddleWare[] = [];\n\n  constructor(public name = STORE_DEFAULT_NAME) {\n    this.storageType =\n      typeof sessionStorage !== 'undefined'\n        ? window.sessionStorage\n        : ({} as Storage);\n  }\n\n  updateStore(defaultValues: GlobalState) {\n    this.state = getStoreData(this.storageType, this.name) || defaultValues;\n  }\n\n  updateMiddleWares(middleWares: MiddleWare[]) {\n    return (this.middleWares = middleWares);\n  }\n}\n\nexport default new StoreFactory();","export const STORE_DEFAULT_NAME = '__LSM__';\nexport const STORE_ACTION_NAME = '__LSM_NAME__';\n","export default (storageType: Storage, storeName: string) => {\n  try {\n    return JSON.parse(storageType.getItem(storeName) as string);\n  } catch {\n    return null;\n  }\n};\n","import * as React from 'react';\nimport storeFactory from './logic/storeFactory';\nimport { StateMachineContextValue } from './types';\n\nconst StateMachineContext = React.createContext<StateMachineContextValue>(undefined as any);\n\nexport const StateMachineProvider: React.FC = ({ children }) => {\n  const [state, setState] = React.useState(storeFactory.state);\n\n  return (\n    <StateMachineContext.Provider\n      value={{ state, setState }}\n    >\n      { children }\n    </StateMachineContext.Provider>\n  );\n}\n\nexport function useStateMachineContext() {\n  const value = React.useContext<StateMachineContextValue>(StateMachineContext);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!value) {\n      console.error(`StateMachine context is undefined, please verify you are calling useStateMachine() as child of a <StateMachineProvider> component.`)\n    }\n  }\n\n  return value;\n}","import * as React from 'react';\nimport { useStateMachineContext } from './StateMachineContext';\nimport storeFactory from './logic/storeFactory';\nimport { setUpDevTools } from './logic/devTool';\nimport {\n  StateMachineOptions,\n  GlobalState,\n  AnyCallback,\n  AnyActions,\n  ActionsOutput,\n} from './types';\nimport { STORE_ACTION_NAME, STORE_DEFAULT_NAME } from './constants';\n\nexport function createStore(\n  defaultState: GlobalState,\n  options: StateMachineOptions = {\n    name: STORE_DEFAULT_NAME,\n    middleWares: [],\n  },\n) {\n  options.name && (storeFactory.name = options.name);\n  options.storageType && (storeFactory.storageType = options.storageType);\n  storeFactory.updateMiddleWares(options.middleWares);\n\n  if (process.env.NODE_ENV !== 'production') {\n    setUpDevTools(\n      storeFactory.storageType,\n      storeFactory.name,\n      storeFactory.state,\n    );\n  }\n\n  storeFactory.updateStore(defaultState);\n}\n\nfunction actionTemplate<TCallback extends AnyCallback>(\n  setState: React.Dispatch<React.SetStateAction<GlobalState>>,\n  callback: TCallback,\n) {\n  return (payload: Parameters<TCallback>[1]) => {\n    if (process.env.NODE_ENV !== 'production') {\n      window[STORE_ACTION_NAME] = callback ? callback.name : '';\n    }\n\n    storeFactory.state = callback(storeFactory.state, payload);\n\n    storeFactory.storageType.setItem(\n      storeFactory.name,\n      JSON.stringify(storeFactory.state),\n    );\n\n    if (storeFactory.middleWares.length) {\n      storeFactory.state = storeFactory.middleWares.reduce(\n        (currentValue, currentFunction) =>\n          currentFunction(currentValue) || currentValue,\n        storeFactory.state,\n      );\n    }\n\n    setState(storeFactory.state);\n  };\n}\n\nexport function useStateMachine<TCallback extends AnyCallback, TActions extends AnyActions<TCallback>>(\n  actions?: TActions,\n): {\n  actions: ActionsOutput<TCallback, TActions>;\n  state: GlobalState;\n} {\n  const { state, setState } = useStateMachineContext();\n\n  return React.useMemo(\n    () => ({\n      actions: actions\n        ? Object.entries(actions).reduce(\n            (previous, [key, callback]) =>\n              Object.assign({}, previous, {\n                [key]: actionTemplate(setState, callback),\n              }),\n            {},\n          )\n        : ({} as any),\n      state,\n    }),\n    [state, setState, actions],\n  );\n}\n","import { GlobalState } from \"../types\";\n\nexport function setUpDevTools(\n  storageType: Storage,\n  name: string,\n  state: GlobalState,\n) {\n  if (typeof window === 'undefined') return;\n\n  window.__LSM_NAME__ = name;\n\n  window.__LSM_DEBUG__ = (value: string) =>\n    storageType.setItem('___LSM_DEBUG__', value);\n\n  window.__LSM_RESET__ = () => storageType.clear();\n\n  window.__LSM_GET_STORE__ = () => storageType.getItem(name);\n\n  window.__LSM_SAVE_TO__ = (name: any) =>\n    window.localStorage.setItem(name, JSON.stringify(state));\n\n  window.__LSM_LOAD__ = ({\n    storeName,\n    data,\n  }: {\n    storeName: string;\n    data?: string;\n  }) =>\n    storageType.setItem(\n      name || '___LSM_DEBUG__',\n      data || window.localStorage.getItem(storeName) || '',\n    );\n}\n","import React from 'react';\nimport { HeaderContext } from 'components/Header';\n\nconst useHeaderContext = () => {\n  const {\n    title, setTitle, setDoGoBack, doGoBack,\n  } = React.useContext(HeaderContext);\n\n  return {\n    title,\n    setTitle,\n    doGoBack,\n    setDoGoBack,\n  };\n};\n\nexport default useHeaderContext;\n","export const scrollToTop = function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport const scrollToBottom = function scrollToBottom() {\n  window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n};\n","import styled, { css } from 'styled-components';\nimport { colors } from 'theme';\n\nexport const BaseText = css`\n  font-family: 'Source Sans Pro';\n  font-size: 0.875rem;\n  line-height: 20px;\n`;\n\nexport const BlackText = styled.div<{ dark?: boolean; fontSize?: string; }>`\n  ${BaseText}\n  color: ${({ dark }) => (dark ? colors.darkBlack : colors.black)};\n  ${props => (props.fontSize ? `font-size: ${props.fontSize};` : '')}\n`;\n\nexport const BaseTitle = styled.div`\n  font-family: 'Open Sans';\n  font-weight: 700;\n  font-size: 1.5rem;\n  line-height: 34.24px;\n  color: ${colors.darkBlack};\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../theme';\n\nexport interface StyledButtonProps {\n  disabled?: boolean;\n  dark?: boolean;\n  id?: string;\n}\n\nexport const StyledButton = styled.button<StyledButtonProps>`\n  height: 50px;\n  border-radius: 4px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  font-weight: bold;\n  font-size: 14px;\n  font-weight: bold;\n  width: 100%;\n\n  ${({ dark, disabled }) => {\n    const color = disabled ? colors.midGray : colors.darkBlack;\n    return dark ? `\n    background-color: ${color};\n    color: ${colors.white};\n    border: none;\n  ` : `\n    background-color: ${colors.white};\n    color: ${color};\n    border: 1px solid ${color};\n  `;\n  }}\n`;\n","import React, { PropsWithChildren } from 'react';\n\n// Styles\nimport {\n  StyledButton,\n  StyledButtonProps,\n} from './style';\n\nexport interface ButtonProps extends PropsWithChildren<StyledButtonProps> {\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void);\n}\n\nconst Button = React.memo(({ children, ...props }: ButtonProps) => ((\n  <StyledButton\n    type=\"button\"\n    {...props}\n  >\n    {children}\n  </StyledButton>\n)));\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const WizardButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: ${props => `calc(100% - ${props.theme.layout.generalPaddingAmount * 2}px)`};\n  margin: 0 auto;\n\n  button {\n    flex: 1;\n\n    &:first-of-type {\n      margin-left: 0px !important;\n    }\n\n    &:last-of-type {\n      margin-left: 20px;\n    }\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Components\nimport Button from 'components/Button';\n\n// Styles\nimport {\n  WizardButtonsContainer,\n} from './style';\n\ninterface WizardButtonsProps {\n  invert?: boolean;\n  leftLabel: string;\n  leftDisabled?: boolean;\n  leftHandler: () => void;\n  rightLabel?: string;\n  rightDisabled?: boolean;\n  rightHandler?: () => void;\n}\n\nconst WizardButtons = React.memo(({\n  invert = false,\n  leftLabel,\n  leftDisabled,\n  leftHandler,\n  rightLabel,\n  rightDisabled,\n  rightHandler,\n}: WizardButtonsProps) => (\n  <WizardButtonsContainer>\n    <Button\n      dark={invert}\n      disabled={leftDisabled}\n      onClick={leftHandler}\n    >\n      {leftLabel}\n    </Button>\n    {\n        rightLabel && rightHandler && (\n          <Button\n            dark={!invert}\n            disabled={rightDisabled}\n            onClick={rightHandler}\n          >\n            {rightLabel}\n          </Button>\n        )\n      }\n  </WizardButtonsContainer>\n));\nexport default React.memo(WizardButtons);\n","// TODO: Improve types\nexport function updateAction(storeKey: string): any {\n  return (state: any, payload: any) => ({\n    ...state,\n    [storeKey]: {\n      ...state[storeKey],\n      ...payload,\n    },\n  });\n}\n\nexport function resetStore(): any {\n  return (state: any) => ({ welcome: { language: state.welcome.language } });\n}\n","import styled from 'styled-components';\nimport { colors } from 'theme';\nimport { BaseTitle, BlackText } from 'components/Texts';\n\nexport const MainContainer = styled.div`\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    margin-bottom: 64px;\n  }\n`;\n\nexport const Title = styled(BaseTitle)`\n  margin-top: 48px;\n  margin-bottom: 16px;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    margin-top: 64px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Text = styled(BlackText)`\n  margin-bottom: 125px;\n  color: ${props => props.theme.colors.darkGray_70};\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    @media (orientation: portrait) {\n      margin-bottom: 185px;\n    }\n\n    @media (orientation: landscape) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const TextAddFile = styled(BlackText).attrs({ dark: true, fontSize: '1rem' })`\n  text-align: center;\n  line-height: 24px;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    font-size: 1.75rem;\n  }\n`;\n\nexport const TextFileConstraints = styled(BlackText).attrs({ dark: true, fontSize: '0.625rem' })`\n  text-align: center;\n  line-height: 24px;\n  color: ${props => props.theme.colors.darkGray};\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    font-size: 1rem;\n    margin-top: 20px;\n  }\n`;\n\nexport const TextErrorContainer = styled.div`\n  font-size: 16px;\n  line-height: 20px;\n  color: ${colors.red};\n  font-family: 'Source Sans Pro';\n  display: 'flex';\n  height: 50px;\n`;\n\nexport const UploadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  margin: 0 auto;\n`;\n\nexport const UploadInput = styled.input`\n  display: none;\n`;\n\nexport const UploadButton = styled.label`\n  width: 88px;\n  height: 88px;\n  background-color: ${colors.green};\n  border-radius: 50%;\n  cursor: pointer;\n  position: relative;\n  margin-bottom: 25px;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    background-color: ${colors.white};\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  &:before {\n    width: 20px;\n    height: 3px;\n  }\n\n  &:after {\n    width: 3px;\n    height: 20px;\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    width: 275px;\n    height: 275px;\n    margin-bottom: 30px;\n\n    &:before {\n      width: 65px;\n      height: 9px;\n    }\n\n    &:after {\n      width: 9px;\n      height: 65px;\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport usePortal from 'react-useportal';\nimport { useTranslation } from 'react-i18next';\n\n// Form\nimport { Controller, useForm } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\n// Components\nimport WizardButtons from 'components/WizardButtons';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Utils\nimport { updateAction } from 'utils/wizard';\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Styles\nimport {\n  MainContainer,\n  Title,\n  Text,\n  TextAddFile,\n  TextFileConstraints,\n  TextErrorContainer,\n  UploadContainer,\n  UploadInput,\n  UploadButton,\n} from './style';\n\nconst audioMaxSizeInMb = 5;\n\nconst mimeTypes = 'audio/wav,audio/wave,audio/wav,audio/x-wav,audio/x-pn-wav,audio/mp3,audio/ogg';\n\nconst schema = Yup.object({\n  uploadedFile: Yup.mixed()\n    .required('ERROR.FILE_REQUIRED')\n    .test('fileSize', 'ERROR.FILE_SIZE', (value?: any) => {\n      if (value) {\n        const file = value as File;\n        const { size } = file;\n        return size <= ((1024 ** 3) * audioMaxSizeInMb);\n      }\n      return !!value;\n    })\n    .test('fileDuration', 'ERROR.FILE_DURATION', async (value?: any) => {\n      if (value) {\n        const file = value as File;\n        const audio = new Audio(URL.createObjectURL(file));\n\n        audio.load();\n        await new Promise(resolver => audio.addEventListener('loadedmetadata', resolver));\n        return (audio.duration >= 3);\n      }\n      return !!value;\n    }),\n}).defined();\n\nconst RecordManualUpload = ({\n  storeKey,\n  previousStep,\n  nextStep,\n  metadata,\n}: Wizard.StepProps) => {\n  // Hooks\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const { setDoGoBack, setTitle } = useHeaderContext();\n  const history = useHistory();\n  const { state, actions } = useStateMachine({ updateAction: updateAction(storeKey) });\n  const {\n    handleSubmit,\n    control,\n    formState,\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: state?.[storeKey]?.[metadata?.currentLogic],\n    resolver: yupResolver(schema),\n  });\n  const { t } = useTranslation();\n\n  const {\n    isValid,\n  } = formState;\n\n  // States\n  const [activeStep, setActiveStep] = React.useState(false);\n  const [errorMsg, setErrorMsg] = React.useState('');\n\n  // Handlers\n  const handleNext = React.useCallback((values: File) => {\n    if (nextStep) {\n      actions.updateAction({\n        [metadata?.currentLogic]: {\n          recordingFile: null,\n          uploadedFile: values,\n        },\n      });\n      setActiveStep(false);\n      history.push(nextStep, { from: 'step-manual-upload' });\n    }\n  }, [nextStep, actions, metadata, history]);\n\n  const handleDoBack = React.useCallback(() => {\n    setActiveStep(false);\n    if (previousStep) {\n      history.push(previousStep);\n    } else {\n      history.goBack();\n    }\n  }, [history, previousStep]);\n\n  const handleUpload = React.useCallback(e => {\n    schema.validate({ uploadedFile: e }).then(() => {\n      handleNext(e);\n    }).catch(err => {\n      if (err.errors[0] === 'ERROR.FILE_SIZE') {\n        setErrorMsg(t('recordingsRecordManual:fileSizeTooBig'));\n      } if (err.errors[0] === 'ERROR.FILE_REQUIRED') {\n        setErrorMsg(t('recordingsRecordManual:fileRequired'));\n      } else {\n        setErrorMsg(t('recordingsRecordManual:fileDurationTooShort'));\n      }\n    });\n  }, [handleNext, t]);\n\n  // Effects\n  useEffect(() => {\n    scrollToTop();\n    setTitle(t('recordingsRecordManual:header'));\n    setDoGoBack(() => handleDoBack);\n  }, [handleDoBack, setDoGoBack, setTitle, t]);\n\n  return (\n    <>\n      <MainContainer>\n        <Title>\n          {t('recordingsRecordManual:micError')}\n        </Title>\n        <Text>\n          {t('recordingsRecordManual:micErrorDescription')}\n        </Text>\n        <Controller\n          control={control}\n          name=\"uploadedFile\"\n          render={({ name }) => (\n            <UploadContainer>\n              <UploadButton htmlFor=\"uploaded-file\" />\n              <UploadInput\n                id=\"uploaded-file\"\n                type=\"file\"\n                name={name}\n                accept={mimeTypes}\n                onChange={e => handleUpload(e.currentTarget.files?.[0])}\n              />\n            </UploadContainer>\n          )}\n        />\n        <TextAddFile>\n          {t('recordingsRecordManual:addFile')}\n        </TextAddFile>\n        <TextFileConstraints>\n          {t('recordingsRecordManual:constraint')}\n        </TextFileConstraints>\n      </MainContainer>\n      <TextErrorContainer>\n        {errorMsg}\n      </TextErrorContainer>\n      {/* Bottom Buttons */}\n      {activeStep && (\n        <Portal>\n          <WizardButtons\n            invert\n            leftLabel={t('recordingsRecordManual:next')}\n            leftDisabled={!isValid}\n            leftHandler={handleSubmit(handleNext)}\n          />\n        </Portal>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(RecordManualUpload);\n","export { default } from './RecordManualUpload';\n"],"sourceRoot":""}